// SASSY MODULAR-SCALE
// https://github.com/scottkellum/modular-scale

// Defaults
$ratio: golden_ratio() !default;
$ratio-negative: $ratio !default;
$base-size: 16px !default;
$round-pixels: true !default;

// Modular Scale function
@function modular-scale($multiple, $base-size: $base-size, $ratio: $ratio, $ratio-negative: $ratio-negative, $round-pixels: $round-pixels) {

  // return the $base-size if $multiple is zero
  @if $multiple == 0 {
    @return $base-size;
  }

  @if $multiple > 0 {
    $size: power($ratio, $multiple) * $base-size;
  } @else {
    $size: power($ratio-negative, $multiple) * $base-size;
  }

  @if unit($size) == "px" and $round-pixels == true {
    @return round($size);
  } @else {
    @return $size;
  }
}

/////////////////////////////////////////////////////////////////////////

// alias for golden_ratio()
@function golden() {
  @return golden_ratio();
}

// Shortcut
@function ms($multiple, $base-size: $base-size, $ratio: $ratio, $ratio-negative: $ratio-negative, $round-pixels: $round-pixels) {
  // Return the value from the Modular Scale function
  @return modular-scale($multiple, $base-size, $ratio, $ratio-negative, $round-pixels);
}

// Write Modular Scale List
@function modular-scale-list($start: 0, $finish: 20, $base-size: $base-size, $ratio: $ratio, $ratio-negative: $ratio-negative, $round-pixels: $round-pixels) {
  $ms-list: unquote("MS-LIST:");
  @for $i from $start through $finish {
    $ms-list: append($ms-list, ms($i, $base-size, $ratio, $ratio-negative, $round-pixels));
  }
  @return $ms-list;
}

@function ms-list($start: 0, $finish: 20, $base-size: $base-size, $ratio: $ratio, $ratio-negative: $ratio-negative, $round-pixels: $round-pixels) {
  @return modular-scale-list($start, $finish, $base-size, $ratio, $ratio-negative, $round-pixels);
}

@mixin modular-scale-list($start: 0, $finish: 20, $base-size: $base-size, $ratio: $ratio, $ratio-negative: $ratio-negative, $round-pixels: $round-pixels) {
  @debug modular-scale-list($start, $finish, $base-size, $ratio, $ratio-negative, $round-pixels);
}

@mixin ms-list($start: 0, $finish: 20, $base-size: $base-size, $ratio: $ratio, $ratio-negative: $ratio-negative, $round-pixels: $round-pixels) {
  @debug modular-scale-list($start, $finish, $base-size, $ratio, $ratio-negative, $round-pixels);
}

@mixin modular-scale-list-output($start: 0, $finish: 20, $base-size: $base-size, $ratio: $ratio, $ratio-negative: $ratio-negative, $round-pixels: $round-pixels) {
    MODULAR-SCALE-LIST {
      ms-list: modular-scale-list($start, $finish, $base-size, $ratio, $ratio-negative, $round-pixels);
    }
  }

@mixin ms-list-output($start: 0, $finish: 20, $base-size: $base-size, $ratio: $ratio, $ratio-negative: $ratio-negative, $round-pixels: $round-pixels) {
  @include modular-scale-list-output($start, $finish, $base-size, $ratio, $ratio-negative, $round-pixels);
}

// Other libraries can easily query if this function is avalible
$modular-scale-loaded: true;